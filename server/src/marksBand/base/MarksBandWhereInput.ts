/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatFilter } from "../../util/FloatFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CriterionListRelationFilter } from "../../criterion/base/CriterionListRelationFilter";
import { CriteriaGroupWhereUniqueInput } from "../../criteriaGroup/base/CriteriaGroupWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { RubricWhereUniqueInput } from "../../rubric/base/RubricWhereUniqueInput";
@InputType()
class MarksBandWhereInput {
  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  bottom?: FloatFilter;

  @ApiProperty({
    required: false,
    type: () => CriterionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CriterionListRelationFilter)
  @IsOptional()
  @Field(() => CriterionListRelationFilter, {
    nullable: true,
  })
  criteria?: CriterionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CriteriaGroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CriteriaGroupWhereUniqueInput)
  @IsOptional()
  @Field(() => CriteriaGroupWhereUniqueInput, {
    nullable: true,
  })
  criteriaGroup?: CriteriaGroupWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => RubricWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RubricWhereUniqueInput)
  @IsOptional()
  @Field(() => RubricWhereUniqueInput, {
    nullable: true,
  })
  rubric?: RubricWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  top?: FloatFilter;
}
export { MarksBandWhereInput };
