/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CriteriaGroupUpdateManyWithoutRubricsInput } from "./CriteriaGroupUpdateManyWithoutRubricsInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { MarksBandUpdateManyWithoutRubricsInput } from "./MarksBandUpdateManyWithoutRubricsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { SectionUpdateManyWithoutRubricsInput } from "./SectionUpdateManyWithoutRubricsInput";
@InputType()
class RubricUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CriteriaGroupUpdateManyWithoutRubricsInput,
  })
  @ValidateNested()
  @Type(() => CriteriaGroupUpdateManyWithoutRubricsInput)
  @IsOptional()
  @Field(() => CriteriaGroupUpdateManyWithoutRubricsInput, {
    nullable: true,
  })
  criteriaGroups?: CriteriaGroupUpdateManyWithoutRubricsInput;

  @ApiProperty({
    required: false,
    type: () => MarksBandUpdateManyWithoutRubricsInput,
  })
  @ValidateNested()
  @Type(() => MarksBandUpdateManyWithoutRubricsInput)
  @IsOptional()
  @Field(() => MarksBandUpdateManyWithoutRubricsInput, {
    nullable: true,
  })
  marksBands?: MarksBandUpdateManyWithoutRubricsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SectionUpdateManyWithoutRubricsInput,
  })
  @ValidateNested()
  @Type(() => SectionUpdateManyWithoutRubricsInput)
  @IsOptional()
  @Field(() => SectionUpdateManyWithoutRubricsInput, {
    nullable: true,
  })
  sections?: SectionUpdateManyWithoutRubricsInput;
}
export { RubricUpdateInput };
