/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CriteriaGroupListRelationFilter } from "../../criteriaGroup/base/CriteriaGroupListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { MarksBandListRelationFilter } from "../../marksBand/base/MarksBandListRelationFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { SectionListRelationFilter } from "../../section/base/SectionListRelationFilter";
@InputType()
class RubricWhereInput {
  @ApiProperty({
    required: false,
    type: () => CriteriaGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CriteriaGroupListRelationFilter)
  @IsOptional()
  @Field(() => CriteriaGroupListRelationFilter, {
    nullable: true,
  })
  criteriaGroups?: CriteriaGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MarksBandListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MarksBandListRelationFilter)
  @IsOptional()
  @Field(() => MarksBandListRelationFilter, {
    nullable: true,
  })
  marksBands?: MarksBandListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SectionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SectionListRelationFilter)
  @IsOptional()
  @Field(() => SectionListRelationFilter, {
    nullable: true,
  })
  sections?: SectionListRelationFilter;
}
export { RubricWhereInput };
